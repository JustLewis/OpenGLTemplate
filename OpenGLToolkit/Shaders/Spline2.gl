#version 460 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout (binding = 0,rgba8) uniform image2D img_output;

uniform vec3 PosA;
uniform vec3 PosB;
uniform vec3 PosC;
uniform vec3 PosD;
uniform float T;
uniform float Distance;

float BezierLine(float t, float wa,float wb, float wc,float wd)
{

float tt = t * t;
float ttt = tt * t;
float mt = 1.0 - t;
float mtt = mt * mt;
float mttt = mtt * mt;

return wa * mttt + 3 * wb * mtt * t + 3 * wc * mt * tt + wd * ttt;

}

void main()
{
vec4 Colour = vec4(1.0f,0.0,0.0,1.0);

float X = (Distance / float(gl_GlobalInvocationID.x)) * T;
//float X = float(gl_GlobalInvocationID.x);

	while(X < Distance * float(gl_GlobalInvocationID.x))
	{
		float x = BezierLine(X,PosA.x,PosB.x,PosC.x,PosD.x)*100;
		float y = BezierLine(X,PosA.y,PosB.y,PosC.y,PosD.y)*100;

		imageStore (img_output, ivec2(x,y), Colour);
		X += T;
	}

}
